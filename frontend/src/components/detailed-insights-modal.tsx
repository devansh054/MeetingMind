"use client"

import { useState } from "react"
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Progress } from "@/components/ui/progress"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Brain, CheckSquare, Users, Download, FileText, Heart, Lightbulb, Calendar } from "lucide-react"

interface DetailedInsightsModalProps {
  open: boolean
  onOpenChange: (open: boolean) => void
}

export default function DetailedInsightsModal({ open, onOpenChange }: DetailedInsightsModalProps) {
  const [isExporting, setIsExporting] = useState(false)

  const handleExportReport = async () => {
    setIsExporting(true)

    // Simulate report generation
    await new Promise((resolve) => setTimeout(resolve, 2000))

    // Create and download a comprehensive report
    const reportData = {
      meetingTitle: "Quarterly Business Review",
      date: new Date().toLocaleDateString(),
      duration: "1h 30m",
      participants: ["Sarah Chen", "Marcus Johnson", "Elena Rodriguez", "David Kim"],
      summary:
        "Productive quarterly review focusing on strong Q4 performance with 23% revenue growth. Team discussed budget allocation, product roadmap, and strategic expansion plans for 2024.",
      keyDecisions: [
        "Approved 23% budget increase for engineering team expansion",
        "New product launch moved to February 2024",
      ],
      actionItems: [
        "Review Q1 budget allocation and resource planning - Marcus Johnson (Due: Next Friday)",
        "Schedule design team follow-up for new product features - Elena Rodriguez (Due: This week)",
        "Prepare board presentation with Q4 metrics - Sarah Chen (Due: Monday)",
      ],
      sentimentAnalysis: {
        overall: "Positive (87%)",
        positive: 65,
        neutral: 25,
        negative: 10,
      },
      participationMetrics: [
        "Sarah Chen: 45% speaking time, 12 contributions",
        "Marcus Johnson: 32% speaking time, 8 contributions",
        "Elena Rodriguez: 28% speaking time, 6 contributions",
        "David Kim: 15% speaking time, 3 contributions",
      ],
    }

    const reportContent = `
MEETING MIND - AI INSIGHTS REPORT
================================

Meeting: ${reportData.meetingTitle}
Date: ${reportData.date}
Duration: ${reportData.duration}
Participants: ${reportData.participants.join(", ")}

EXECUTIVE SUMMARY
================
${reportData.summary}

KEY DECISIONS
=============
${reportData.keyDecisions.map((decision, i) => `${i + 1}. ${decision}`).join("\n")}

ACTION ITEMS
============
${reportData.actionItems.map((item, i) => `${i + 1}. ${item}`).join("\n")}

SENTIMENT ANALYSIS
==================
Overall Sentiment: ${reportData.sentimentAnalysis.overall}
- Positive: ${reportData.sentimentAnalysis.positive}%
- Neutral: ${reportData.sentimentAnalysis.neutral}%
- Negative: ${reportData.sentimentAnalysis.negative}%

PARTICIPATION METRICS
====================
${reportData.participationMetrics.map((metric, i) => `${i + 1}. ${metric}`).join("\n")}

Generated by Meeting Mind AI on ${new Date().toLocaleString()}
    `.trim()

    const blob = new Blob([reportContent], { type: "text/plain" })
    const url = URL.createObjectURL(blob)
    const a = document.createElement("a")
    a.href = url
    a.download = `meeting-insights-${new Date().toISOString().split("T")[0]}.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)

    setIsExporting(false)
  }

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="glass-strong !w-[98vw] !h-[98vh] !max-w-none !max-h-none overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <Brain className="h-5 w-5 text-primary" />
            Comprehensive AI Insights Report
          </DialogTitle>
          <DialogDescription>
            Detailed analysis and insights from your meeting powered by Meeting Mind AI
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-6">
          {/* Meeting Overview */}
          <Card className="glass">
            <CardHeader>
              <CardTitle className="text-lg flex items-center gap-2">
                <Calendar className="h-5 w-5 text-primary" />
                Meeting Overview
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                <div className="text-center">
                  <div className="text-2xl font-bold text-primary">1h 30m</div>
                  <div className="text-sm text-muted-foreground">Duration</div>
                </div>
                <div className="text-center">
                  <div className="text-2xl font-bold text-primary">4</div>
                  <div className="text-sm text-muted-foreground">Participants</div>
                </div>
                <div className="text-center">
                  <div className="text-2xl font-bold text-primary">92%</div>
                  <div className="text-sm text-muted-foreground">Efficiency</div>
                </div>
                <div className="text-center">
                  <div className="text-2xl font-bold text-primary">3</div>
                  <div className="text-sm text-muted-foreground">Action Items</div>
                </div>
              </div>
            </CardContent>
          </Card>

          <Tabs defaultValue="summary" className="w-full">
            <TabsList className="grid w-full grid-cols-4">
              <TabsTrigger value="summary">Summary</TabsTrigger>
              <TabsTrigger value="actions">Actions</TabsTrigger>
              <TabsTrigger value="sentiment">Sentiment</TabsTrigger>
              <TabsTrigger value="participation">Participation</TabsTrigger>
            </TabsList>

            <TabsContent value="summary" className="space-y-4">
              <Card className="glass">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <FileText className="h-5 w-5 text-primary" />
                    Executive Summary
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-muted-foreground leading-relaxed">
                    Productive quarterly review focusing on strong Q4 performance with 23% revenue growth. Team
                    discussed budget allocation, product roadmap, and strategic expansion plans for 2024. The meeting
                    demonstrated high engagement levels with balanced participation and clear decision-making processes.
                  </p>
                </CardContent>
              </Card>

              <Card className="glass">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Lightbulb className="h-5 w-5 text-primary" />
                    Key Topics Discussed
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    {[
                      { topic: "Q4 Performance Review", duration: "15 min", importance: 98 },
                      { topic: "Budget & Resource Allocation", duration: "12 min", importance: 95 },
                      { topic: "Product Launch Timeline", duration: "8 min", importance: 87 },
                      { topic: "Team Expansion Plans", duration: "6 min", importance: 82 },
                    ].map((item, index) => (
                      <div key={index} className="flex items-center justify-between p-3 rounded-lg bg-accent/10">
                        <div>
                          <div className="font-medium">{item.topic}</div>
                          <div className="text-sm text-muted-foreground">{item.duration}</div>
                        </div>
                        <div className="flex items-center gap-2">
                          <Progress value={item.importance} className="w-20 h-2" />
                          <span className="text-sm text-muted-foreground">{item.importance}%</span>
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="actions" className="space-y-4">
              <Card className="glass">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <CheckSquare className="h-5 w-5 text-primary" />
                    Action Items & Decisions
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {[
                      {
                        task: "Review Q1 budget allocation and resource planning",
                        assignee: "Marcus Johnson",
                        priority: "high",
                        dueDate: "Next Friday",
                        confidence: 92,
                      },
                      {
                        task: "Schedule design team follow-up for new product features",
                        assignee: "Elena Rodriguez",
                        priority: "medium",
                        dueDate: "This week",
                        confidence: 87,
                      },
                      {
                        task: "Prepare board presentation with Q4 metrics and projections",
                        assignee: "Sarah Chen",
                        priority: "high",
                        dueDate: "Monday",
                        confidence: 95,
                      },
                    ].map((action, index) => (
                      <div key={index} className="p-4 rounded-lg bg-accent/10 space-y-2">
                        <div className="font-medium">{action.task}</div>
                        <div className="flex items-center gap-2 flex-wrap">
                          <Badge variant="outline">{action.assignee}</Badge>
                          <Badge variant={action.priority === "high" ? "destructive" : "secondary"}>
                            {action.priority} priority
                          </Badge>
                          <Badge variant="outline">Due: {action.dueDate}</Badge>
                          <span className="text-sm text-muted-foreground">{action.confidence}% confidence</span>
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="sentiment" className="space-y-4">
              <Card className="glass">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Heart className="h-5 w-5 text-primary" />
                    Sentiment Analysis
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="text-center">
                      <div className="text-3xl font-bold text-green-400 mb-2">87%</div>
                      <div className="text-muted-foreground">Overall Positive Sentiment</div>
                    </div>
                    <div className="space-y-3">
                      <div>
                        <div className="flex justify-between mb-1">
                          <span className="text-sm">Positive</span>
                          <span className="text-sm">65%</span>
                        </div>
                        <Progress value={65} className="h-2" />
                      </div>
                      <div>
                        <div className="flex justify-between mb-1">
                          <span className="text-sm">Neutral</span>
                          <span className="text-sm">25%</span>
                        </div>
                        <Progress value={25} className="h-2" />
                      </div>
                      <div>
                        <div className="flex justify-between mb-1">
                          <span className="text-sm">Negative</span>
                          <span className="text-sm">10%</span>
                        </div>
                        <Progress value={10} className="h-2" />
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="participation" className="space-y-4">
              <Card className="glass">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Users className="h-5 w-5 text-primary" />
                    Participation Metrics
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {[
                      { name: "Sarah Chen", speakTime: 45, contributions: 12 },
                      { name: "Marcus Johnson", speakTime: 32, contributions: 8 },
                      { name: "Elena Rodriguez", speakTime: 28, contributions: 6 },
                      { name: "David Kim", speakTime: 15, contributions: 3 },
                    ].map((participant, index) => (
                      <div key={index} className="space-y-2">
                        <div className="flex justify-between items-center">
                          <span className="font-medium">{participant.name}</span>
                          <div className="text-sm text-muted-foreground">
                            {participant.speakTime}% • {participant.contributions} contributions
                          </div>
                        </div>
                        <Progress value={participant.speakTime} className="h-2" />
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>

          {/* Export Actions */}
          <div className="flex gap-2 pt-4 border-t border-border/50">
            <Button onClick={handleExportReport} disabled={isExporting} className="flex-1">
              <Download className="h-4 w-4 mr-2" />
              {isExporting ? "Generating Report..." : "Export Full Report"}
            </Button>
            <Button variant="outline" onClick={() => onOpenChange(false)} className="bg-transparent">
              Close
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  )
}
